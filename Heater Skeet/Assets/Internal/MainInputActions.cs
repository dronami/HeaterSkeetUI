//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Internal/MainInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainInputActions"",
    ""maps"": [
        {
            ""name"": ""Playa"",
            ""id"": ""9e0f50da-8c0d-4a01-b633-20b51938a7cd"",
            ""actions"": [
                {
                    ""name"": ""MovePlayer"",
                    ""type"": ""Value"",
                    ""id"": ""eece5ad8-95f7-4c47-9e2d-5e629ca0c652"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveReticle"",
                    ""type"": ""Value"",
                    ""id"": ""43691369-f808-4167-81ec-733ba9a9ec9c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b3c5a524-c713-4878-8175-cfbd6fc5fea0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""69a492df-5223-4843-b5f6-54fe1b6e9a1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimLock"",
                    ""type"": ""Button"",
                    ""id"": ""4fb3a472-085b-440b-b728-cd5ae26ef53b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootAlternate"",
                    ""type"": ""Button"",
                    ""id"": ""77fe48d3-9c21-42dc-8672-759ca9fa3585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""06c62ba7-0089-476b-aa4f-89744f687023"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeAbility"",
                    ""type"": ""Button"",
                    ""id"": ""b651983b-0ea4-43d4-9f9c-2ddc9086318a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitGame"",
                    ""type"": ""Button"",
                    ""id"": ""3b63bd5a-65cf-4c5a-b2f5-ac5ba9cf96c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8bff8968-2bb1-484b-b999-fd7a999532d4"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.15)"",
                    ""groups"": ""Controller"",
                    ""action"": ""MovePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""992ca1ed-2b0d-4c7a-91d6-eab1f479a9a9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eadfebf9-dc84-457a-86fd-41c7769994ed"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ae8cbc27-5223-4505-a073-ab2668046ba3"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""45f0b96b-2c83-4c8e-8024-06ce36938618"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e2df77bf-5910-4b8d-a72f-e921620461ee"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bbf2ef05-6272-4897-91ed-acc5ea45e439"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""MoveReticle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""750c58a8-0831-4c6d-a443-4f8fac46cbfe"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveReticle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4f0ab36d-7be6-45f8-b3fa-9529f9fb5ba6"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveReticle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aa1819bd-4d1f-4279-aca1-c06da464cc0f"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveReticle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f20d4b87-f313-4764-8ecf-aaa132864cda"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveReticle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""67ff7ec6-e747-4971-becd-81618c6ae30e"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveReticle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""00a32042-6dec-4706-80c0-3d3c41172177"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ff1c282-9785-4128-9b13-c23fa5ff94ee"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0618ea0f-f22d-4a98-ae7b-9346815df8fe"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""186365bf-3c19-4684-b963-35654c51a7e2"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d844b97-375f-4192-b3d1-91bb494e18ba"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""AimLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""012d85c1-9c2f-44d5-95d0-639794959413"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AimLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6f9fa11-1e09-4079-ae52-b1e7845b46f1"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""ShootAlternate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ed063a8-ba69-42cf-8492-bd83aa390946"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ShootAlternate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cae8fde4-f292-4cf9-a89e-77ce8a0be4e8"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""ChangeAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c969ae26-bf39-4b7b-9ecf-b942247ce912"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ChangeAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9498ade1-02dd-45f9-8b8a-f39f80036815"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c527b33-a9d9-4da3-a9c9-0c91b88b2d7a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffa26def-b0e7-4cd5-a3fd-a49c142383dc"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuitGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Playa
        m_Playa = asset.FindActionMap("Playa", throwIfNotFound: true);
        m_Playa_MovePlayer = m_Playa.FindAction("MovePlayer", throwIfNotFound: true);
        m_Playa_MoveReticle = m_Playa.FindAction("MoveReticle", throwIfNotFound: true);
        m_Playa_Jump = m_Playa.FindAction("Jump", throwIfNotFound: true);
        m_Playa_Shoot = m_Playa.FindAction("Shoot", throwIfNotFound: true);
        m_Playa_AimLock = m_Playa.FindAction("AimLock", throwIfNotFound: true);
        m_Playa_ShootAlternate = m_Playa.FindAction("ShootAlternate", throwIfNotFound: true);
        m_Playa_Dodge = m_Playa.FindAction("Dodge", throwIfNotFound: true);
        m_Playa_ChangeAbility = m_Playa.FindAction("ChangeAbility", throwIfNotFound: true);
        m_Playa_QuitGame = m_Playa.FindAction("QuitGame", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Playa
    private readonly InputActionMap m_Playa;
    private IPlayaActions m_PlayaActionsCallbackInterface;
    private readonly InputAction m_Playa_MovePlayer;
    private readonly InputAction m_Playa_MoveReticle;
    private readonly InputAction m_Playa_Jump;
    private readonly InputAction m_Playa_Shoot;
    private readonly InputAction m_Playa_AimLock;
    private readonly InputAction m_Playa_ShootAlternate;
    private readonly InputAction m_Playa_Dodge;
    private readonly InputAction m_Playa_ChangeAbility;
    private readonly InputAction m_Playa_QuitGame;
    public struct PlayaActions
    {
        private @MainInputActions m_Wrapper;
        public PlayaActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovePlayer => m_Wrapper.m_Playa_MovePlayer;
        public InputAction @MoveReticle => m_Wrapper.m_Playa_MoveReticle;
        public InputAction @Jump => m_Wrapper.m_Playa_Jump;
        public InputAction @Shoot => m_Wrapper.m_Playa_Shoot;
        public InputAction @AimLock => m_Wrapper.m_Playa_AimLock;
        public InputAction @ShootAlternate => m_Wrapper.m_Playa_ShootAlternate;
        public InputAction @Dodge => m_Wrapper.m_Playa_Dodge;
        public InputAction @ChangeAbility => m_Wrapper.m_Playa_ChangeAbility;
        public InputAction @QuitGame => m_Wrapper.m_Playa_QuitGame;
        public InputActionMap Get() { return m_Wrapper.m_Playa; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayaActions set) { return set.Get(); }
        public void SetCallbacks(IPlayaActions instance)
        {
            if (m_Wrapper.m_PlayaActionsCallbackInterface != null)
            {
                @MovePlayer.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnMovePlayer;
                @MovePlayer.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnMovePlayer;
                @MovePlayer.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnMovePlayer;
                @MoveReticle.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnMoveReticle;
                @MoveReticle.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnMoveReticle;
                @MoveReticle.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnMoveReticle;
                @Jump.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnJump;
                @Shoot.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnShoot;
                @AimLock.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnAimLock;
                @AimLock.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnAimLock;
                @AimLock.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnAimLock;
                @ShootAlternate.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnShootAlternate;
                @ShootAlternate.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnShootAlternate;
                @ShootAlternate.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnShootAlternate;
                @Dodge.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnDodge;
                @ChangeAbility.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnChangeAbility;
                @ChangeAbility.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnChangeAbility;
                @ChangeAbility.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnChangeAbility;
                @QuitGame.started -= m_Wrapper.m_PlayaActionsCallbackInterface.OnQuitGame;
                @QuitGame.performed -= m_Wrapper.m_PlayaActionsCallbackInterface.OnQuitGame;
                @QuitGame.canceled -= m_Wrapper.m_PlayaActionsCallbackInterface.OnQuitGame;
            }
            m_Wrapper.m_PlayaActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MovePlayer.started += instance.OnMovePlayer;
                @MovePlayer.performed += instance.OnMovePlayer;
                @MovePlayer.canceled += instance.OnMovePlayer;
                @MoveReticle.started += instance.OnMoveReticle;
                @MoveReticle.performed += instance.OnMoveReticle;
                @MoveReticle.canceled += instance.OnMoveReticle;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @AimLock.started += instance.OnAimLock;
                @AimLock.performed += instance.OnAimLock;
                @AimLock.canceled += instance.OnAimLock;
                @ShootAlternate.started += instance.OnShootAlternate;
                @ShootAlternate.performed += instance.OnShootAlternate;
                @ShootAlternate.canceled += instance.OnShootAlternate;
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @ChangeAbility.started += instance.OnChangeAbility;
                @ChangeAbility.performed += instance.OnChangeAbility;
                @ChangeAbility.canceled += instance.OnChangeAbility;
                @QuitGame.started += instance.OnQuitGame;
                @QuitGame.performed += instance.OnQuitGame;
                @QuitGame.canceled += instance.OnQuitGame;
            }
        }
    }
    public PlayaActions @Playa => new PlayaActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IPlayaActions
    {
        void OnMovePlayer(InputAction.CallbackContext context);
        void OnMoveReticle(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnAimLock(InputAction.CallbackContext context);
        void OnShootAlternate(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnChangeAbility(InputAction.CallbackContext context);
        void OnQuitGame(InputAction.CallbackContext context);
    }
}
